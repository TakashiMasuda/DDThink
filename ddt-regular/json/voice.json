{
 	"head" : {
	    "headPageTitlePrivate":{
	        "text":"DDThink - 株式会社デジタルデザインシンク | 社員 研修生の声"
	    },
	    "seoKeyWordPrivate":{
	        "name":"keywords",
	        "content":"新宿,デジタルデザインシンク,社員 研修生の声"
	    },
	    "seoDescriptionPrivate":{
	        "name":"description",
	        "content":"株式会社デジタルデザインシンクの研修を経て入社した社員の感想をご紹介します。"
	    }
    },
    "voiceContentArea":{
        "id":"main",
        "class":"voice",
        "pageSideMenu":{
            "class":"sidemenu recruitSideMenu"
        },
        "maincontents":{
            "id":"maincontents",
            "pageArticle":{
                "id":"voice"
            }
        }
    },
    "voiceBgImg":{
        "id":"backgroundgif",
        "src":"ddt-regular/img/theVoice(header-back).gif"
    },
    "voiceSection1":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men01).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"23<br>"
            },
            "membername":{
                "text":"T.Y"
            }
        },
        "voicetext":{
            "html":"　私はプログラムについて全く知識がない状態で弊社に入社しました。ですのでプログラムというものがどのように書いてどのように動くのかということが右も左も分からない状態で、自分が本当にプログラムを書けるようになるのかという不安がかなりありました。しかし研修を進めていくなかでその不安も徐々になくなっていきました。なぜなら、この研修では正しいプログラムの書き方ややってはいけないプログラムの書き方、さらに自分が分からないことについてメンターが丁寧に指導してくださったからです。このことによって自分がこの先どう進んでいくべきかということが明確になり、迷いがなくなったので、集中して研修に没頭することができました。ただ、なんでもかんでも質問すると質問された人の時間を奪ってしまうので、ある程度は自分で分からないことについて調べ、具体的に何について分からないのか説明できるように整理してから質問をすることが大事であると学びました。<br>　この研修ではプログラム以外にもビジネスマナーやメールの書き方、電話対応や上長に対しての適切な接し方など様々なことを学ぶことができます。中でも私が一番学べてよかったと思っていることは「仕事に対しての姿勢」についてです。以前の私は大変なことは初心者の自分よりも実力が高い先輩に任せるようにしたり、研修は実際の現場での仕事ではないと思って取り組むという社会人として非常に甘い行動ばかりをとっていました。そんなことでは実際に現場に出て通用しないとメンターに日々指導してもらい、自分の行動を改めていきました。途中でくじけそうになったりしたこともありましたが、この経験により精神が強くなり、現場にでた今は大変役に立っていると思います。<br>　この研修を通して、以前ならすぐに諦めていたことでも諦めることなく取り組むことができるようになり、私はエンジニアとしてだけでなく人としてもひとまわり成長できたと思っています。ただ、まだまだ未熟な身でありますのでこの先の仕事でも研修で学んだことを忘れずに日々精進することを目指し、これからの仕事に精一杯打ち込んでいきたいと思います。"
        }
    },
    "voiceSection2":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men02).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"29<br>"
            },
            "membername":{
                "text":"T.M"
            }
        },
        "voicetext":{
            "html":"　プログラミングの専門校を出て、ひとまずはこの業界でやっていくための最低限の知識とスキルは身に付いたかなと思い、就職活動に勤しんでいました。<br>　一方で、自分自身の職歴やコミニュケーション能力の不足についての不安がありました。実際に面接の場において、熱意だけは表現できたものの空回りして、良い受け答えもできずにいて良い結果が得られていませんでした。幸い、当社の採用の面接においては熱意を何より重視しています。当社の研修はその熱意を基に、一人前のエンジニアとして育ててゆきます。研修では全体を通して実践的なスキルを身に付けることになります。<br>　初めにJava、SQLといったどこに行っても役立つ言語の知識を身に付けました。平行して、わかりやすいドキュメントの書き方、ビジネスマナーといった、社会人としての汎用的なスキルも満遍なく学習させていただきました。社会人としてのスキルも、エンジニアとしてやっていくための言語の知識も等しく大事でると教わり、どちらもおろそかにならないように努めました。この大事さについては、現場に出てすぐ実感することとなりました。ソフトウェアを作るならば設計書が必要になり、ドキュメントを書く能力は必要不可欠です。予めビジネスマナーを知って実践できるようにしておけば、初めて現場に出たときも所属するチームでのやり取りがスムーズになります。<br>　これらを学習した結果、私は初めての現場で迷わずに振られたタスクに取り組むことができ、不安も大きく軽減されました。また、研修の基礎部分の学習が終了した後は、それまでに見せた私自身の適性を考慮していただき、Webのクライアントサイド、サーバサイドの学習が主となりました。実際にWebサイトを設計、開発を行いました。初めは単なる学習用のWebサイトの作成が主でした。次第にスキルアップが認められると、さらに応用的なサイトを作成する経験を積むこととなり、私は他のエンジニアになるために研修を受けている人間に比べてアドバンテージを得ていたと自負しています。<br>　一方で、一定のスキルが身に付いたと認められたとはいえ、経験が浅く頼りないということは事実です。この点については、大まかな方向性の指示をいただき、成果物を頻繁にチェックしていただくことで十分にカバーしていただけました。効率の悪い勉強内容が認められれば改善方法のご指導も親身になってしていただけました。万全の体制で充実した研修の毎日を送ることができ、入社当初に抱いていた実務への不安も自信がつくことに反比例してなくなっていきました。研修のうちから一般的な新人エンジニアを遥かに凌駕した能力が身に付き、私自身もそれを実感していました。不安材料となっていたコミュニケーション能力の不足についても、私特有の課題として研修の中で改善を行っていました。現場に出るにあたってどのような能力が不足しているかを徹底的に解析していただき、日々の研修の中で着実に改善できるように配慮していただきました結果、実務にあたることとなった頃には以前のおどおどした私はどこかに失せていました。ただ仕事に必要な能力を身に付けて現場に放り込まれるのではなく、より上を目指していくにあたってどう改善していけばいいのか、真に良い人材になるにはどう進んでいけばいいのか、それを追求し続けることが当社の研修の真髄であると私は思っています。真熱意と誠意を持って真剣に取り組めば、気づいた頃にはつぎ込んだ以上のものが返ってきているすばらしきものであると、こうして筆を執る中反芻しています。"
        }
    },
    "voiceSection3":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men01).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"28<br>"
            },
            "membername":{
                "text":"H.U"
            }
        },
        "voicetext":{
            "html":"　私はプログラムについて無知識な状態でまず専門校に行き、そこからの入社と言う経緯でしたが、専門校卒業時点では基本的な事でさえ理解が出来ていない状態でした。それでもどうしてもゲームを作りたい、この業界でやっていきたい、その熱意を買ってもらい採用していただきました。そして入社後は８ヶ月という他社では見たことのない長期に渡る期間を設けていただきました。専門校卒業したという身でありながら知識が追い付いていなかった私であっても、諦める事もなく色々助言をしていただけました。<br>　研修自体は、プログラムをただ覚えるというものではなく実務で使えるスキル、知識、コツ等を身に着けるといったものでした。それは、プログラミングやロジックだけを学ぶのではなく、オブジェクト指向とは何かを知り、学ぶ事や、動作するものを作り上げる「結果」よりもそこに至るまでの「過程」が大切であるというものでした。それはコーディングをいきなりするのではなく、まず「設計」をするという事です。この「設計」においてもテキストを用いてUMLという言語を学びました。内容としては大きく分けて基本設計から始まり詳細設計へと作成していきます。この言語を学んだ事で、無責任に書き連ねていたプログラムが有機的に作用するソースコードへと昇華しました。<br>　しかし、「設計」はコーディングのように即レスポンスがあるものではなく、大変地道な作業であると思います。ですが、これを行うと行わないでは完成に至るまでの時間、コスト、ソフトのパフォーマンス全てが変わってきます。このようなプログラマとしてのバックボーンとなるオブジェクト指向、設計というもの軸に８ヶ月という時間をかけ勉強させていただきました。<br>　また、プログラムを学ぶだけではなく、プログラマとしての心得やヒューマンスキル等々、プログラマという一つの「社会人」としての礼節も色々教えていただけました。それはビジネス文書の書き方やプレゼンの手法だけではなく、電話の受け答えや人との付き合い方など細かなところのノウハウまで教えていただきました。<br>　そういった研修をこなした末、入社当時の夢であったゲーム業界へと飛び込むことが出来ました。人一倍飲み込みや吸収が遅い私ではありますが、研修時代に培った自力で解決する能力や設計、ロジカルな思考力をフルに発揮出来ますし、何より熱望していたゲーム業界であるので新しい知識を得られる今の仕事は非常に楽しいです。<br>　話が長くなってしまいましたが、同じような「是非この業界でやっていきたい、やりたい事がある」という熱い想いをお持ちの方いましたら、一緒に働ける事を心からお待ちしています。<br><br>　実務についてから・・<br><br>　私は現場に初めて入ってまず第一に思った事が、現場のルールなどがもの凄く緩いという事でした。現場では一々他人のスケジュールを指摘してくれる親切な人などいません。自分でスケジュールマネジメントをし、作業が遅れたらほう・れん・そう（報告・連絡・相談）をしてチーム内でも問題を共有し、自分の遅れたタスクの回収をする必要があります。当たり前の事ですが、実際それが出来ない人がいるのが現場になります。<br>　私は研修の一環で、自分で作成したスケジュール通りにいかなければ問題を報告し共有する、そしてメンターからコーチングを受ける、これを解決するまで繰り返す経験させてもらいました。当たり前の内容に聞こえますが、これだけ実践に近い環境の研修を経験したおかげで、現場では多少の事では屈しない精神力と、早めにアラートを上げ問題の早期解決を図る事をするようになりました。従って「現場が緩いからいい」というものではなく、緩いからこそ自分の考えをしっかり持ち業務に臨むという姿勢のもと仕事に臨めるようになりました。また、その結果人との信頼に関係に繋がり、より仕事をしやすい環境を自分で構築できます。<br>　他にも、アジャイルの現場では設計を疎かにする傾向があります、まず機能を作り動作を目で見て検証という方法でのやり方に特に問題はないと思っていますが、ただその手法のみではバグが多く潜んでいます。それに対し弊社には、「ソフトウェアは「育ちより生まれ」」という方針があります。生まれが悪いとどう頑張ってもいいものには育たないといったものになります。まさにこの通りで、最初の作りが散漫なものになるとバギーアプリとなり、後々修正をする際にも大変面倒くさいことになります。そうならない為にも、まず設計図を描く、その上でソースに落とす、この作業を行う事でこれらの手戻りが発生するようなプログラムを組まないようになります。<br>　以上のように研修中には、エンジニアとしてのスキルアップは勿論のこと、IT業界でやっていく上でのヒューマンスキル、心の持ちよう、業務への取り組み方などもの凄く実践的な事を学びます。つまり、研修を通して学ぶ事は全ては現場で生き抜く自分の力になります。そこに早い遅いは関係しません。やる気があるのかないのか、シンプルにこの二点になります。エンジニアになりたいと考えているのであれば、是非弊社にきて研修を受けてください。乗り切ったときには相当な自分の力になり、また自信へと変わります。もう一度言います。私は年齢は関係ないと思っています。やる気があるのであれば、是非弊社の研修プログラムを乗り切り私たちと一緒に仕事を楽しみましょう。"
        }
    },
    "voiceSection4":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men02).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"27<br>"
            },
            "membername":{
                "text":"T.I"
            }
        },
        "voicetext":{
            "html":"　初めまして。このページを読んでいるということは、弊社の研修制度に興味がおありですね？<br>　という前提でここから話を進めさせていただきます。仮にあなたが弊社の研修制度を受けるとして、一番身につけたいものはなんでしょうか。実務に役立つスキルでしょうか。社会で円滑な関係を築くための礼儀作法でしょうか。それとも、現場で厳しい状況に置かれた時にそれを乗り切れるだけのタフネスでしょうか。<br>　大概の人は、研修を通して実務に役立つスキルを身につけたいと考えるでしょう。あなたもよほどの偏屈でなければ、同様の考えを持ったと思います。それでもあえて私が他の選択肢を提示したことには、理由があります。弊社の研修制度では、提示した選択肢のすべてを身につけることが出来るからです。<br>　弊社の研修制度では、クライアントとサーバー両方のサイドの基礎的なプログラミング技術をはじめとして、プログラム全体にわたった設計の構築手法、デバッグフェーズにおけるバグ発生箇所の切り分け方、といった実務に役立つスキルを十分に習得出来ます。またそれだけではなく、ビジネス文書の書き方や上司への報告の仕方、実務に臨む際の心の持ち方、プロジェクト内でのタスクのこなし方、スケジュールの組み方に至るまで教示を受けるので、たとえあなたが社会人としての経験が浅かったとしても、弊社の研修に真摯に臨めば、いっぱしの社会人かつ一流のプログラマーになりうるだけの素養は得られるでしょう。<br>　はい、ここまで読んでくれたあなたに質問です。あなたはエンジニアになりたいですか？<br>　プログラムを書いたことがないだとか、数学が苦手だとか。あなたがそんな理由でエンジニアになることを諦めようとしているのなら、それはもったいないことです。私は研修を受けるまで、ショートカットキーすら知りませんでした。文系なので、数学は苦手です。そんな私でも、今はクライアントサイドエンジニアとして、ゲーム開発の最前線で働いています。<br>　あなたがエンジニアになりたいと思っているのならば、弊社の扉をたたいてください。私たちはいつだって、あなたが来ることを心待ちにしています。<br>　<br>　実務についてから・・<br>　<br>　今回は『チーム』というテーマで一筆をとらせていただきたいと思います。<br>　通常、システムの開発は複数人のチームで行います。その規模は十人足らずだったり三十人を超える大所帯だったりとまちまちですが、いずれにしてもひとりで開発を行うことはほぼありません。<br>　自宅で趣味として行うようなひとりでの開発と違い、チーム開発ではチームのメンバーの数だけ意図や思惑があるわけですから、自分の思い通りにいかないことがたびたびあります。そのような中でチームの一員としてどうあるべきか、あくまで自身の考えですが、以下に記します。<br>　最優先で考えることは、チームの目的です。どのようなシステムの開発であっても、共通の目的はそのシステムを開発して利益を得ることでしょう。利益を得るには、クライアントの要求する仕様(私の所属しているゲーム業界ではクライアント＝ユーザですが)を必要十分に満たすことが不可欠です。<br>　なにか大きなミスが発覚した時に責任の所在を追求しがちですが、誰の責任かということは、クライアントにとって重要ではありません。クライアントにとって重要なことは、そのチーム(あるいはその会社)が要求を満たせなかったということです。<br>　その点を踏まえて考えると、「自分の役割はここからここまで。だから後のことは知らない」という考え方が、いかにピント外れかがわかりますね。<br>　クライアントの評価の向き先は、誰がどの程度の役割をこなしたかではなく、どれだけ満足できるシステムが開発されたか、ですから。<br>　安直に野球でたとえると、自分が３安打を放ってもチームが負けてしまったら意味がないといったところでしょうか。ただしシステム開発の場合は、野球と違って外部からは個々の成績が見えないので、野球よりも顕著にその傾向が顕れるでしょう。<br>　チームで開発するときは必ず各人員に役割が振られますが、それは「君たちは与えられた役割だけをこなしていれば良い」という意味ではありません。自分がどれだけ役割を忠実にこなしていても、出来上がったシステムがクライアントに受け入れられなければ、チームとしては敗北です。<br>　割り振られた役割はあくまで自分がメインで担当する役割だという認識で、意識の焦点はもっと広いところ、「チームが成功するために自分はどうあるべきか」に合わせましょう。そうすればチーム内でのくだらない責任追及も減り、クライアントの満足度の高いシステムが出来上がり、結果としてチームの目的である利益を得ることができるでしょう。<br>　少なくとも私は、上記のような考えのもとで日々の開発に携わっております。"
        }
    },
    "voiceSection5":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men01).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"29<br>"
            },
            "membername":{
                "text":"S.S"
            }
        },
        "voicetext":{
            "html":"　職探しをしていた時、研修期間を設けている会社は数多くありました。半年以上という長い期間しっかりとした勉強をする期間を設けている会社はこのデジタルデザインシンクだけでした。そして、その長い期間を設けているという事実以上に、学んだことがどう実務で活きるのか、という事は私も最初はとても気になりました。その上で、実体験を交えて実際に行った研修の流れと成果に関してお話しさせて頂きます。<br>　まずは吟味を重ねたテキストを通じてコーディングの基本から学び、プログラムを組む上で避けては通れないオブジェクト指向の考え方、DBの扱い方、サーバの仕組みなど基礎知識を身につけます。ですが、そういった基礎知識で終わらせることはせず、その後フローチャートやUMLといった、アプリケーションを作る「設計」という技術を使ってアプリケーションを一から作る経験と技術を学ばせてもらえます。この「設計」という技術は打ち込んだプログラムのようにすぐに結果が見えるわけではないので軽視されがちですが、この技術をきちんと身につけることで、完成までのトータルで見た作業スピードや、実際に作ったプログラムの精度はそれを行わないエンジニアとは大きな差をつけられるという事を教えて頂けた事が、素晴らしい収穫でした。ですが、まだまだ未熟な身の上ですので現状も「設計」の習得を中心に日々精進を重ねています。<br>　その「設計」技術の習得を中心としてコーディング→提出→指導を受けるという事を繰り返し、アプリケーションを完成させていく過程で、気づかないうちに現場で行っている事と同等以上の経験を積ませてもらえていた事は現場にでて肌で感じています。さらに、現場に出てから恥をかかないようビジネスマナー・ビジネス文書の書き方なども指導を頂き、研修生一人一人をきちんと見てくださるので、自分に足りない部分が何なのかをきちんと見極めた上での指導をして頂けることもこの研修の大きな魅力の一つです。<br>　実際にエンジニアの仕事を長くしている友人にも、研修の内容を話して「そんなことまで教えてもらえるのか」驚かれました。そして実際に現場にでてから、無駄な事は一つもなかったという事を日々実感しています。そういった研修内容はもちろん楽ではありませんが、その分得られるものは多いと自信を持って言えるので、今後もこの研修で学んだことと、この機会を頂けた事への感謝を忘れず精進を重ねる所存です。<br><br>　実務についてから・・<br><br>　実務に入ってから一番実感したことは、研修で教えて頂いたことが実務を行うに当たってとても役に立つということです。逆に教えて頂いたことに反してしまった時は手痛い目にあいました。教えとして大きく分け三つに分類しました。<br>　第一に報告・連絡・相談に関してです。一部ですが例を上げます。仕事を与えられたらきちんと明文化してメールを残しておく事です。エンジニアの仕事は自分の頭だけでは、内容・要求を記憶しておくのはとても困難です。その為、上長や同僚なども、自分で話した内容を覚えていない事はざらにあります。それを踏まえて必ずメールを現場の上長にすること、と教えて頂いたのにメールをする事を忘れてしまった事がありました。その全てとは言いませんが、忘れた時に上長と意見が食い違った時は、もはや何が正しかったのか確かめるすべはありません。メールさえしておけば、そのメールを見せる事で上長との仕事におけるコミュニケーションのトラブルを大きく減少させる事ができる事を学びました。そういったことはほんの一部ですが、研修で学んだことに無駄な事はないという確信めいたものをますます感じている次第です。<br>　第二に、例えば「設計を怠ると後々面倒な事になる」というものがあります。もし、設計をせずにコーディングに入ったなら、頭の中だけでは数千コードのソースが数十あるものも関連を全て把握しておかなければトラブルの温床になります。エンジニアの仕事では自分の実装を理解していなければ、何かバグが起こった時対処できないからです。ですが、そんなことはできるはずもなく、出来たのは散々なものでした。確かに早くコードを打ち出し、仕様だけ満たせる安心感はありました。ですがクラス同士の関係や、自分がどうしてそういうコーディングしたのかすら、時間を空けた時、記憶にありませんでした。上長や、技術の明るいエンジニアからは、対象のコーディングに懸念が見えるとどうしてそういう書き方をしたのかと質問が入ることは少なくありません。ですが、設計をしていないと、何故そういうコードを書いたのかわからず、しどろもどろになる始末でした。きちんと教えに従い、設計を行いコーディングに入った時は、仮に考えたロジックが違っていても質問を受けた時キチンと答えられました。<br>　現場で一番責められる事は間違いを犯すことではなく、自分が作ったものをきちんと説明できない事という事を痛感しました。現に間違いは説明さえできれば(深刻なものや、複数回同じミスをしたときでなければ)笑って終わらせて貰えることがほとんどでで、間違いを正して頂けました。ですが、自分で作ったものを説明できないと顔をしかめ評価を激減されてしまいます。そういったことも回避する術も教えて頂いていたのか、と感動を覚えた事を記憶しています。<br>　最後に、社長に教わり自分なりに咀嚼した仕事の心構えが最も大切な教えの一つと認識しています。それは、向上心をもって真摯な姿勢で業務に臨む事です。現場で見てきてことと照らし合わせると、これが一番大切な事ではないかと感じました。現場に出るとやはり、色々な方がいらっしゃり、必ずしもいい影響を与えてくれる方ばかりではありません。基本的な勤怠の部分がおぼつかなかったり、仕事に対する不平ばかりで責任感に欠けるように見える方など様々です。私も少し悪い影響を受けたことがあり、仕事に対していやな事があると愚痴っぽくなってしまった事があります。しかし、それが気持ちを鬱蒼とさせてしまうマイナスファクターでしかありませんでした。それに気づけたのは、仕事に責任感を持つ事が大切と教えて頂いた事実があったからだと考えています。何があってもまず、自分に原因があるはずと考え、解決の為に創意工夫を凝らすという選択肢を選ぶことができたのです。何をしたら状況が改善するかというベクトルに思考を動かし、あらゆる状況を楽しんで仕事ができるようになりました。勿論自分が悪くないのが明らか、と感じてしまう瞬間はあるでしょうし、イライラしてしまう人は少なくないと思います。そのような時は研修での教えが役立ち、多少困難な事があっても、めげることなく向き合う事ができました。何よりどういう状況でも人のせいにすることは何も解決しない、という事を研修・現場を通して学ぶ事ができたと思っています。<br>　ここまであげたことは、研修で考えて頂いた事全体の本の一部でこれだけでは終わりません。ほかにも学びのチャンスはうちの会社ではあり、月一の全体定例会、月一の個人定例会でも社長からアドバイスを頂けとても勉強になっています。研修の後も色々学ばせて頂き、その時に、よく言って頂ける言葉が「周りに流されず、うちの教えを守れば必ず一流になれる」という言葉です。これまでも実感として、自分の経験値が上がっているのを実感していますし、言葉に偽りはないと確信しています。確かに、研修の最初は半信半疑になる人も少なくないかもしれませんが、誰しもが、研修を終え実務に入った時、その有用性を実感するのは間違いないと考えています。今後も、誘惑に負けてしまいそうになり、さぼりたくなることもあるかもしれません。ですが、教えて頂いたことが一流になる為の王道であることを思い出し、精進する所存です。"
        }
    },
    "voiceSection6":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men02).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"29<br>"
            },
            "membername":{
                "text":"T.O"
            }
        },
        "voicetext":{
            "html":"　研修制度を採用している会社は、山程あります。そしてその会社毎によって研修の目的も様々です。<br>　しかし基本的に短期間である研修期間の中で出来ることは非常に限られています。全くプログラミングに触れたことのない人ならば、最低限の知識を習得することであったり、また経験者の方ならばプロジェクトの中で遅れを取らない程度の開発環境の習得で研修期間が終わってしまうこともあるでしょう。<br>　しかし、我が社の研修は他の会社とは異なり、「実際の現場で役に立つスキルを身につけることが出来る」研修であると私は思っています。では「実際の現場で役に立つスキル」とはなんでしょうか？基本的にエンジニアは新しい現場で使われている技術や環境を全て知っていることはありません。新しい現場で触れたことの無いフレームワーク等が使用されていて、現場で作業を行うと同時に学習をしなければいけない、という状況は多々あります。これからエンジニアとしてこの業界で働こうとしている皆さんにとって、一番心配に感じるところはまさにここではないでしょうか。「理解出来るだろうか」「周りに遅れを取らないだろうか」という不安を今まで勉強にしろ、スポーツにしろ感じなかった人はいないと思います。この研修では、そういった新しい環境に出会った時、いかに焦らず効率よく学習し、自分のスキルとして習得していくかを学べるのが他の研修とは違う点だと考えています。<br>　では簡単に研修の流れを説明しながら、いかにこの点を学んで行くのかということをお伝えしたいと思います。<br>　まず基礎の知識を１から学習します。コーディングの基礎から始まり、オブジェクト指向とは何かといった基本的なことをテキストを通じて学びます。通常の研修ではここで終わってしまうこともあるでしょう。しかし我が社の研修ではフローチャート、UML(ソフトウェアの設計手法)を学び、自分で設計をして一つのアプリを作るところまで行います。この作業の中でアプリを作るだけでなく、効率の悪い作業を行っていたら、すぐに指摘をもらい、その都度修正していきます。問題が発生し、しかもどこでその問題が発生しているか分からないときに最善の解決策をどのように導きだすか。ということを徹底的に行います。これを繰り返すことにより、未知の環境、出会うバグに対して焦ること無く対処できるようになります。さらにテキストでは知ることの出来ない良いコードの書き方、書いてはいけない悪いコードの書き方。さらにはビジネス文書の書き方、ビジネスマナーなど細かいところまで学ぶことが出来ます。<br>　ここまで聞いて、夢のような研修だと皆さんは思うかもしれません。しかし物を覚えること、もしくは勉強するという事は楽しい事ばかりではありません。壁も多くあります。しかし平坦で楽な道ばかり通っていては、それなりのエンジニアで終わってしまう。厳しい道を行くことは良いエンジニアになるためには誰もが通らなければいけない道だと僕は思っています。皆さんがこの研修を乗り越えてた時には「やってよかった」と思うことを私が保証します！是非皆さんがこの研修を受けて、私と同じ現場で共に働くことを心からお待ちしています。<br><br>　実務についてから・・<br><br>　私は我が社に入ってから半年間研修を受けさせていただいたのですが、実務に入った時にこの研修で得た知識やノウハウが本当に役に立ったなと感じました。<br>　私は28歳の時に右も左もわからない状態でこの業界に入ったので当然すぐにチームのメンバーを引っ張り最前線で活躍出来たという訳ではありません。<br>　しかし入社してから3年間実務に入った中でリーダーという立場で実務に関わらせていただいた経験が出来たのも研修でエンジニアとしての思考のベースが出来ていたというのを強く実感しています。<br>　時に実務ではシステムエラー、ヒューマンエラーといった問題に直面します。その際にこれらの問題をどう対処し、乗り越えていくかというエンジニアとしての根本的な部分を教えてもらえたということが私のエンジニアとしての財産となっています。<br>　絶えず新しいアーキテクチャやフレームワークが出てきては廃れていくこの業界では特殊な事例をのぞいて一つの技術を永遠に使い続けていくというケースは存在しないと私は考えています。技術の趨勢が激しいこの業界では流行していた技術が1年後には時代遅れになっているということが多々あります。その中でエンジニアとして求められているものはもちろん新しい技術への知識であったりする訳ですが、これらの知識は本、インターネット、毎週開かれるイベントなどに参加すればキャッチアップは誰でも可能です。<br>　実務につくと想定外の出来事が当然でてきます。ドキュメントに書いてあるサンプル通りに書いても動かない。一定の負荷をかけると止まってしまうシステム、テスト環境と本番環境のサーバーのCPUのコア数が違っていたことで発生したバグなど挙げていけばキリがありません。プロジェクトがスタートしてからリリースするまでさらにその後の運用で問題が発生しないということは非常に悲しいですが存在しません。<br>　もちろん技術的な面だけでなく、他のチームメンバーとの意思の疎通による問題。仕様漏れや説明不足によって当初の予定とは全く別物になってしまったシステムが出来上がったということもあります。話が逸れてしまい申し訳ありません。長々と想定外の事態を挙げさせていただいたのは私がエンジニアとして求められる一番大事なことはまさにこれらの問題を冷静に素早く対処する能力が一番大切なことだと考えているからです。<br>　今でも研修で強く心に残っていることが「物事をシンプルに考える」ということです。<br>　冷静に素早く問題に対応するためにはこの「物事をシンプルに考える」ということがとても大切であると私は考えています。テスト時では発生しなかった原因が全くわからないバグが本番環境で発生したとします。これらのバグは大抵はなんらかの条件が重なった時のみ表れるバグで、一見コードを見ただけでは原因がわかりません。いわゆる障害です。焦りから軽いパニックになります。チーム全員でバグを探しますがそう簡単には見つかりません。ここで物事をシンプルに考えるということがとても重要になります。<br>　バグが起きている可能性のある箇所を一つ一つ検証していくのです。なんだそんなことかと思われるかもしれません。なんだそんなことかと皆さん思うかもしれません。ただ人間というものは平常時にはあっさりと出来ることがパニックになると出来なかったり、問題が解決したあとに振り返るとなんであんなことにつまづいていたのだろうという思い出は誰もが持っていることだと思います。そして一つ一つバグの可能性のある箇所の動作を検証していくことよりもこのままなんとなくコードを見つめていればバグが見つかるはずという思い込みをしてしまったりするのです。こういった障害に遭遇した時にチームの中で一番エンジニア暦の浅い私が真っ先にバグを見つけるといったケースも僭越ながらありました。これも研修で「物事をシンプルに考える」という発想を研修で何度も何度も教えていただいたことで実践出来たのだと思っています。<br>　こういった通常ならば長年の経験と試行錯誤を経て身につけて行くエンジニアとしてのエッセンスを研修の中で実践レベルで自分に身につけられたことが自分の糧になっていると実務の中で強く感じています。"
        }
    },
    "voiceSection7":{
        "humanImage":{
            "src":"ddt-regular/img/theVoice(men01).gif"
        },
        "intoimg":{
            "membersex":{
                "html":"男性<br>"
            },
            "memberage":{
                "html":"24<br>"
            },
            "membername":{
                "text":"D.K"
            }
        },
        "voicetext":{
            "html":"　この研修に参加したばかりの頃は本当にこれで実務に入って大丈夫なのか、と思いました。しかしそれも最初の頃だけで全体的な感想としては、非常に密度が濃く技術から人との接し方、実務のこなし方まで身につけられる良い研修でした。<br>　私は今回の研修が初めて受けた研修でしたので他の会社の研修がどうなのかはわかりませんが実際に実務に携わり、研修の経験が非常に活かされているように実感しています。研修内容には実務に近い内容も含まれていますのでそこを乗り切ることができるかが一番のキモとなるのだと思います。<br>　現在は実務に入りまして、ここの経験が活きておりスムーズに作業をこなせていると思います。この先まだまだ知らないことに多く触れる機会があると思いますが研修の経験を活かし今後どれだけ自分が成長できるか、もっと自分を前に出して周りを引っ張って行けるような人間になれるよう頑張っていきたいと思います。<br><br>　実務についてから・・<br><br>　研修を終えて、実務に入ってから一番印象に思ったことを述べさせていただきます。研修ではコードの書き方、報告の仕方など様々なことを教授していただきましたが、研修を通して実務に入り報告の重要性、コミュニケーションの取り方が一番重要なのではと感じました。<br>　実際業務上の関係で現場の上司、エンジニア、プランナーやデザイナーの方々とやり取りすることが多く、開発をする上で真っ先に関係各所の方々とミーティングをする場面が多いです。なんで報告やコミュニケーションが重要だと思ったかというと、過去に報告や共有を怠ったために開発が遅れたり、作成した物が仕様からずれていたために本来の機能の仕様からずれていたためにバグが出たりなど出向先の方々やユーザーの皆様方に不十分な品を提供してしまったことがありました。<br>　まぁこれぐらいなら大丈夫だろうと高を括って報告を怠ってしまったために起きてしまった問題なだけに後には後悔しか残りませんでした。<br>　技術力は作業をこなしていれば自然と身に付く物かと思いますが、報告に関してはコミュニケーションを取れるよう日頃から意識していないと身に付かない力だと思います。しっかりと日頃から意識していれば自然とその内に出来るようになり、繋がりも増えていくので自然に色々な情報も耳に入るようになりました。この情報のおかげで次に行うべき行動も自ずと分かってくるようになってきたので冷静に判断出来る状況が増えました。<br>　現在、エンジニアの作業と共にプランナーの作業も任せて貰えるようになり、業務内容は異なりますが根本的なところは変わらないかと思いますので報告やコミュニケーションを怠らずに実務をこなしていきたいと思います。"
        }
    }
}